# Copyright 2018 OpenStack Foundation
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#

"""create tsinghuanet tables

Revision ID: 38462bfd9dc
Revises: None
Create Date: 2018-01-01 14:26:02.305436

"""

# revision identifiers, used by Alembic.
revision = '38462bfd9dc'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tn_routers')
    op.drop_table('tn_interfaces')
    op.drop_table('tn_static_routes')
    op.drop_table('tn_vms')
    op.drop_table('tn_addresss')
    op.drop_table('tn_services')
    op.drop_table('tn_snat_rules')
    op.drop_table('tn_rules')
    op.drop_table('tn_policys')
    op.drop_table('tn_firewalls')
    ### end Alembic commands ###

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tn_routers',
                    sa.Column('id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('priv_id', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('tenant_id', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('name', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('manage_ip', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('image_name', mysql.VARCHAR(length=128), nullable=False),
                    sa.Column('snat_inner_use', mysql.VARCHAR(length=1024), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('tn_interfaces',
                    sa.Column('id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('router_id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('inner_id', mysql.INTEGER(display_width=32), autoincrement=False, nullable=True),
                    sa.Column('extern_name', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('inner_name', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('state', mysql.VARCHAR(length=16), server_default=sa.text(u"'down'"), nullable=True),
                    sa.Column('type', mysql.VARCHAR(length=16), nullable=True),
                    sa.Column('mac', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('vlan_id', mysql.INTEGER(display_width=32), autoincrement=False, nullable=True),
                    sa.Column('ip_prefix', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('is_manage', mysql.VARCHAR(length=16), server_default=sa.text(u"'false'"), nullable=True),
                    sa.Column('is_gw', mysql.VARCHAR(length=16), server_default=sa.text(u"'false'"), nullable=True),
                    sa.Column('is_sub', mysql.VARCHAR(length=16), server_default=sa.text(u"'false'"), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('tn_static_routes',
                    sa.Column('router_id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('dest', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('prefix', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('next_hop', mysql.VARCHAR(length=32), nullable=False),
                    sa.PrimaryKeyConstraint('router_id')
                    )

    op.create_table('tn_addresss',
                    sa.Column('rule_id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('name', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('ip_prefix', mysql.VARCHAR(length=32), nullable=False),
                    sa.PrimaryKeyConstraint('rule_id', 'name')
                    )

    op.create_table('tn_services',
                    sa.Column('rule_id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('name', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('protocol', mysql.VARCHAR(length=16), nullable=False),
                    sa.Column('src_port_min', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.Column('src_port_max', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.Column('dst_port_min', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.Column('dst_port_max', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('rule_id')
                    )

    op.create_table('tn_snat_rules',
                    sa.Column('router_id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('inner_id', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.Column('srcaddr', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('dstaddr', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('trans_addr', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('srcaddr_name', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('dstaddr_name', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('trans_addr_name', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('trans', mysql.VARCHAR(length=16), nullable=True),
                    sa.PrimaryKeyConstraint('router_id', 'inner_id')
                    )

    op.create_table('tn_rules',
                    sa.Column('id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('policy_id', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('inner_id', mysql.INTEGER(display_width=32), autoincrement=False, nullable=False),
                    sa.Column('name', mysql.VARCHAR(length=32), nullable=False),
                    sa.Column('desc', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('protocol', mysql.VARCHAR(length=16), nullable=True),
                    sa.Column('action', mysql.VARCHAR(length=16), nullable=True),
                    sa.Column('enable', mysql.VARCHAR(length=16), nullable=True),
                    sa.Column('srcaddr', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('dstaddr', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('service', mysql.VARCHAR(length=64), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('tn_policys',
                    sa.Column('id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('name', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('desc', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('rule_inner_use', mysql.VARCHAR(length=1024), nullable=True),
                    sa.Column('reference_count', mysql.INTEGER(display_width=32), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('tn_firewalls',
                    sa.Column('id', mysql.VARCHAR(length=64), nullable=False),
                    sa.Column('name', mysql.VARCHAR(length=32), nullable=True),
                    sa.Column('desc', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('policy_id', mysql.VARCHAR(length=64), nullable=True),
                    sa.Column('router_ids', mysql.VARCHAR(length=1024), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    ### end Alembic commands ###
